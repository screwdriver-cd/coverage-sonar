if [ ! -f sonar-project.properties ] && [ -z "$SD_SONAR_OPTS" ]; then echo "ERROR - No sonar project properties defined." && exit 0; fi && if curl --version > /dev/null 2>&1; then SD_CURL_CMD_WRAPPER="eval"; else SD_CURL_CMD_WRAPPER="sd-step exec --pkg-version 7.54.1 core/curl"; fi && if unzip -version > /dev/null 2>&1; then SD_UNZIP_CMD_WRAPPER="eval"; else SD_UNZIP_CMD_WRAPPER="sd-step exec --pkg-version 6.0 core/unzip"; fi && export SD_CURL_CMD_WRAPPER && export SD_UNZIP_CMD_WRAPPER && SONAR_TOKEN=`$SD_CURL_CMD_WRAPPER "curl -H \"Authorization: Bearer $SD_TOKEN\" https://api.screwdriver.cd/v4/coverage/token"` && VERSION=`cat sonar-project.properties | awk -F= '/sonar.projectVersion=/{print $2}'` && PROJECT_VERSION=${VERSION:='not provided'} && SONAR_OPTIONS=`eval echo "$SD_SONAR_OPTS"` && if [ "false" = false ]; then SD_SONAR_PROJECT_KEY=`job:$SD_JOB_ID`; else SD_SONAR_PROJECT_KEY=`pipeline:$SD_PIPELINE_ID`; fi && export SD_SONAR_PROJECT_KEY && if echo $SCM_URL | grep git@ > /dev/null 2>&1; then export SONAR_SCM_URL=`echo $SCM_URL | sed -e 's/:/\//g' | sed -e 's/git@/https:\/\//g'`; else export SONAR_SCM_URL=${SCM_URL}; fi && SCANNER_OPTION='"-Dsonar.host.url=https://sonar.screwdriver.cd" "-Dsonar.login=$SONAR_TOKEN" "-Dsonar.projectKey=$SD_SONAR_PROJECT_KEY" "-Dsonar.projectName=$SD_PIPELINE_NAME:$SD_JOB_NAME" "-Dsonar.projectVersion=$PROJECT_VERSION" "-Dsonar.links.scm=$SONAR_SCM_URL" "-Dsonar.links.ci=https://cd.screwdriver.cd/pipelines/$SD_PIPELINE_ID" $SONAR_OPTIONS' && SCANNER_PATH="/opt/sd/sonar-scanner/bin/sonar-scanner" && if [ -s ${SCANNER_PATH} ] && [ -x ${SCANNER_PATH} ]; then eval $SCANNER_PATH $SCANNER_OPTION || true; exit 0; fi && if [ `uname` = 'Darwin' ]; then TARGET_OS='macosx'; else TARGET_OS='linux'; fi && $SD_CURL_CMD_WRAPPER "curl -o ./sonarscanner.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-${TARGET_OS}.zip" && $SD_UNZIP_CMD_WRAPPER "unzip -q ./sonarscanner.zip" && SCANNER_PATH="sonar-scanner-3.3.0.1492-${TARGET_OS}/bin/sonar-scanner" && eval $SCANNER_PATH $SCANNER_OPTION || true
